Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000

Code Used :

Select Count(*)
From table_name;
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id : 10000
ii. Hours = business_id : 1562
iii. Category = business_id : 2643
iv. Attribute = business_id : 1115
v. Review = business_id: 8090, id : 10000
vi. Checkin = business_id : 493
vii. Photo = id: 10000, business_id: 6493
viii. Tip = business_id:3979, user_id: 537
ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id : 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	
CODE :

Select Count(DISTINCT Primary_Key_Name_or_Foreign_Key_Name)
From table_name;


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:


SELECT COUNT(*) 
FROM user 
WHERE id IS NULL 
OR name IS NULL 
OR review_count IS NULL 
OR yelping_since IS NULL 
OR useful IS NULL 
OR funny IS NULL 
OR cool IS NULL 
OR fans IS NUL
OR average_stars IS NULL 
OR compliment_hot IS NULL 
OR compliment_more IS NULL
OR compliment_profile IS NULL 
OR compliment_cute IS NULL
OR compliment_list IS NULL 
OR compliment_note IS NULL 
OR compliment_plain IS NULL 
OR compliment_cool IS NULL 
OR compliment_funny IS NULL 
OR compliment_writer IS NULL
OR compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5	       avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2	        avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995

CODE USED :

Select MIN(Column_Name),
MAX(Column_Name),
AVG(Column_Name)
From Table_Name;

		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

Select Sum(Review_Count) as RC,
City
From Business
Group By City
Order by RC Desc;

	
	
	Copy and Paste the Result Below:

|   city     |  NUM  | 
| Las Vegas  | 82854 | 
| Phoenix    | 34503 |
 | Toronto    | 24113 |
 | Scottsdale | 20614 |
 | Charlotte  | 12523 |
 | Henderson  | 10871 |
 | Tempe      | 10504 |
 | Pittsburgh | 9798  |
 | Montréal   | 9448  |
 | Chandler   | 8112  | 
| Mesa        | 6875 | 
| Gilbert     | 6380 |
| Cleveland   | 5593 | 
| Madison     | 5265 |
| Glendale    | 4406 |
| Mississauga | 3814 |
| Edinburgh   | 2792 |
| Peoria      | 2624 | 
| North Las Vegas | 2438 |
| Markham     | 2352 |
| Champaign   | 2029 |
| Stuttgart   | 1849 |
| Surprise    | 1520 | 
| Lakewood    | 1465 | 
| Goodyear    | 1155 | 

(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

Select Sum(Review_Count) As “Count”,
Stars As Star_Rating
From Business
Where City = 'Avon'
Group By Stars ;



Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
 | Count | Star_Rating | 
 | 10 | 1.5 | 
| 6  | 2.5 |
 | 88 | 3.5 |
 | 21 | 4.0 |
 | 31 | 4.5 |
 | 3  | 5.0 |

ii. Beachwood

SQL code used to arrive at answer:

Select Sum(Review_Count) As “Count”,
Stars As Star_Rating
From Business
Where City = 'Beachwood'
Group By Stars ;




Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

|Count | Star_Rating |
| 8  | 2.0 | 
| 3  | 2.5 |
| 11 | 3.0 | 
| 6  | 3.5 |
| 69 | 4.0 |
| 17 | 4.5 |
| 23 | 5.0 |
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
Select Review_Count,
Name
From User
Order By Review_Count desc
Limit 3;	
		
	Copy and Paste the Result Below:
		
| review_count | name | 
| 2000 | Gerald | 
| 1629 | Sara |
| 1339 | Yuri |

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
No,posing more reviews does not correlate with more fans.For instance,the review count of 609 has 503 fans while review count of 2000 has 253 fans only. Thus, there is no correlation visible.

Code Used:

Select Review_Count,
Fans
From User
Order By Fans desc;

	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with the word “love” than with the word “hate”.In all, there are 1780 reviews with the word “love” in them while there are only 232 reviews with the word “hate” in them.

	
	SQL code used to arrive at answer:

Select id,text
From review
Where text like '%love%';

Select id,text
From review
Where text like '%hate%';

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	



Select name,
fans
From user
Order by fans desc
Limit 10;
	
	Copy and Paste the Result Below:

	
| name | fans | 
| Amy  | 503 |
| Mimi | 497 | 
| Harald | 311 |
| Gerald | 253 |
| Christine | 173 | 
| Lisa | 159 | 
| Cat | 133 | 
| William | 126 |
| Fran | 124 |
| Lissa | 120 | 		

Part 2: Inferences and Analysis

1.Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

I am choosing Las Vegas as city and Shopping as Category.
	
i.Do the two groups you chose to analyze have a different distribution of hours?
 
ANSWER : Yes,Walgreens with 2.5 rating has a distribution of 8:00-22:00 hours on Saturday while Red Rock Canyon Visitor Centre with 4.5 rating has a distribution of 8:00-16:30 hours on Saturday.


ii.Do the two groups you chose to analyze have a different number of reviews?

ANSWER: Yes,the group with 2-3 stars have less number of  reviews as compared to the group with 4  stars.But the group with 5 stars has the least number of reviews.

         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

ANSWER : The locations having same code have 2-3  ratings while locations having different code have 4-5 ratings.

SQL code used for analysis:

Select business.name,
business.city,
business.stars,
business.address,
business.postal_code,
business.review_count,
hours.hours,
category.category
From (business INNER JOIN category ON business.id = category.business_id) 
INNER JOIN hours ON  business.id = hours.business_id
Where business.city = 'Las Vegas' AND category.category = 'Shopping'
Group By business.stars;

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: The business that are still open have more reviews on average than the ones which are closed.
         
         
ii. Difference 2:The business which have more useful, funny and cool remarks in their reviews are still open as compared to the business that are closed.
         
         
         
SQL code used for analysis:


Select AVG(b.stars),
SUM(b.review_count),
AVG(b.review_count),
COUNT(r.useful)+COUNT(r.funny)+COUNT(r.cool),
is_open
FROM business b INNER JOIN review r ON b.id = r.id 
GROUP BY b.is_open;



	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do: I will be predicting if the users who have been using yelp since a long time will have more  number of fans than a new user will have.
         
         
iii.Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data: For this analysis, I will need the User data set with fans and yelping_since column in it. I will use the date and time functions to find out the number of years the user has been using Yelp and then find the number of fans corresponding to it.I chose this data because I needed to compare the various aspects of user data set. 
                           
                  
iv.Output of your finished dataset:

 |name | review_count | yelping_since | fans | Years | 
 | Sarah | 278 | 2005-12-21 00:00:00 | 41 | 15 | 
 | Linda | 584 | 2005-08-07 00:00:00 | 89 | 15 |
 | Brian | 131 | 2006-01-31 00:00:00 | 14 | 14 | 
 | Andy | 324 | 2006-01-25 00:00:00 | 26 | 14 | 
 | Nicole | 864 | 2006-08-02 00:00:00 | 43 | 14 |
 | Jenn | 657 | 2006-05-20 00:00:00 | 62 | 14 |
 | Koizumi | 160 | 2006-09-22 00:00:00 | 73 | 14 | 
 | .Hon | 1246 | 2006-07-19 00:00:00 | 101 | 14 |
 | Roanna | 1039 | 2006-03-28 00:00:00 | 104 | 14 |
 | Tina | 32 | 2007-07-16 00:00:00 | 3 | 13 |
 | Ruth | 142 | 2007-11-18 00:00:00 | 11 | 13 | 
 | Tara | 168 | 2007-11-13 00:00:00 | 21 | 13 |
 | Hanna | 422 | 2007-09-20 00:00:00 | 40 | 13 | 
 | Renee | 364 | 2007-10-03 00:00:00 | 54 | 13 |
 | Bridget | 574 | 2007-11-28 00:00:00 | 55 | 13 |
 | Sharon | 498 | 2007-06-10 00:00:00 | 56 | 13 | 
 | Alison | 775 | 2007-07-02 00:00:00 | 61 | 13 |
 | Ben | 307 | 2007-03-10 00:00:00 | 96 | 13 |
 | bernice | 255 | 2007-08-29 00:00:00 | 105 | 13 |
 | Lissa | 834 | 2007-08-14 00:00:00 | 120 | 13 |
 | Amy | 609 | 2007-07-19 00:00:00 | 503 | 13 |
 | Nina | 69 | 2008-12-13 00:00:00 | 10 | 12 |
 | Stacey | 348 | 2008-09-26 00:00:00 | 23 | 12 |
 | Jennifer | 657 | 2008-03-04 00:00:00 | 33 | 12 |
 | Susanna | 639 | 2008-11-17 00:00:00 | 44 | 12 | 

 (Output limit exceeded, 25 of 90 total rows shown)
         
         
v.Provide the SQL code you used to create your final dataset:

Select name,
review_count,
yelping_since,
fans,
(2020 - STRFTIME('%Y',yelping_since)) as Years
From User
Group By fans
Order By Years Desc;


